>> how to squash commits in git
[('Useful Git commands\nThis section will briefly explain some other Git commands you will most likely\nu', 1.0), ('Writing a Bear in C++\nThe bear that will be created with this tutorial will check whether there is\na', 0.5431754874651811), ('Step 4. Creating a Fork and Testing Your Changes\nThis tutorial implies you working on your fork. To ', 0.5264623955431755)]
>> how to run coala
[('Actually Writing a Test\nSo how do you implement a test in coala? First up, tests are placed into\nthe', 1.0), ('Writing a Bear in C++\nThe bear that will be created with this tutorial will check whether there is\na', 0.9), ('Writing a Bear With Javascript and Node\nThis part of the tutorial will demonstrate how to make an Ex', 0.7535714285714286)]
>> getting started
[('Actually Writing a Test\nSo how do you implement a test in coala? First up, tests are placed into\nthe', 1.0), ('Executing our Tests\ncoala has a big test suite. It is meant to work on every platform on\nevery PC. I', 0.8823529411764706), ('Welcome to the Newcomers Guide!\nDO NOT WORK ON ANY ISSUE WITHOUT ASSIGNMENT! If you do, someone else', 0.8235294117647058)]
>> performing a rebase
[('Useful Git commands\nThis section will briefly explain some other Git commands you will most likely\nu', 1.0), ('Writing a Bear in C++\nThe bear that will be created with this tutorial will check whether there is\na', 0.9545454545454546), ('Welcome to the Newcomers Guide!\nDO NOT WORK ON ANY ISSUE WITHOUT ASSIGNMENT! If you do, someone else', 0.9393939393939394)]
>> how to write good commit
[('Why Do We Need Good Commits?\nAn atomic commit is way easier to review. The reviewer thus will be\nabl', 1.0), ('Useful Git commands\nThis section will briefly explain some other Git commands you will most likely\nu', 0.9661016949152542), ("Squashing your commits\nIt's possible that you have more than one commit and you want them to be\nsqua", 0.864406779661017)]
>> travis ci
[('Travis CI\nTravis is used to confirm that the tools install and build\nproperly. It also runs the test', 1.0), ('AppVeyor CI\nTo find out how coala acts in Microsoft Windows, we use\nAppVeyor which runs test and bui', 0.5555555555555556), ('Circle CI\nCircle CI is also used for the same purpose as travis, to\ncheck everything installs and bu', 0.5)]
>> circle ci
[('Circle CI\nCircle CI is also used for the same purpose as travis, to\ncheck everything installs and bu', 1.0), ('Travis CI\nTravis is used to confirm that the tools install and build\nproperly. It also runs the test', 0.9166666666666666), ('AppVeyor CI\nTo find out how coala acts in Microsoft Windows, we use\nAppVeyor which runs test and bui', 0.8333333333333334)]
>> appveyor ci
[('AppVeyor CI\nTo find out how coala acts in Microsoft Windows, we use\nAppVeyor which runs test and bui', 1.0), ('Travis CI\nTravis is used to confirm that the tools install and build\nproperly. It also runs the test', 0.6470588235294118), ('Circle CI\nCircle CI is also used for the same purpose as travis, to\ncheck everything installs and bu', 0.47058823529411764)]
>> install cib
[('Usage\nTo use the tool, you need to give it arguments.\nTo install bears, simply run cib install follo', 1.0), ('Installing from Git\n/home/meet/meet/answers/corobo/answers/coala/docs/Developers/Development_Setup.r', 0.375), ('Using virtualenv\nInstall virtualenv using pip :\n\n$ pip3 install virtualenv\n\nCreate the virtualenv :\n', 0.1875)]

